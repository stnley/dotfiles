" XDG support {{{

if empty($MYVIMRC) | let $MYVIMRC = expand('<sfile>:p') | endif

if empty($XDG_CACHE_HOME)  | let $XDG_CACHE_HOME  = $HOME."/.cache"       | endif
if empty($XDG_CONFIG_HOME) | let $XDG_CONFIG_HOME = $HOME."/.config"      | endif
if empty($XDG_DATA_HOME)   | let $XDG_DATA_HOME   = $HOME."/.local/share" | endif

set runtimepath^=$XDG_CONFIG_HOME/vim
set runtimepath+=$XDG_DATA_HOME/vim
set runtimepath+=$XDG_CONFIG_HOME/vim/after

set packpath^=$XDG_DATA_HOME/vim,$XDG_CONFIG_HOME/vim
set packpath+=$XDG_CONFIG_HOME/vim/after,$XDG_DATA_HOME/vim/after

let g:netrw_home = $XDG_DATA_HOME."/vim"
call mkdir($XDG_DATA_HOME."/vim/spell", 'p', 0700)
set viewdir=$XDG_DATA_HOME/vim/view | call mkdir(&viewdir, 'p', 0700)

set backupdir=$XDG_CACHE_HOME/vim/backup | call mkdir(&backupdir, 'p', 0700)
set directory=$XDG_CACHE_HOME/vim/swap   | call mkdir(&directory, 'p', 0700)
set undodir=$XDG_CACHE_HOME/vim/undo     | call mkdir(&undodir,   'p', 0700)

if !has('nvim') " Neovim has its own special location
  set viminfofile=$XDG_CACHE_HOME/vim/viminfo
endif
"}}}

" vim-plug {{{
" automatic installation {{{2
let data_dir = $XDG_DATA_HOME."/vim"
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif
"}}}2

" plugins {{{2
let plugin_dir = $XDG_DATA_HOME."/vim/plugged"
call plug#begin(plugin_dir)

Plug 'dracula/vim', { 'as': 'dracula' }

call plug#end()
"}}}2
"}}}

" plugin configuration {{{
syntax enable
let g:dracula_colorterm = 0
colorscheme dracula
"}}}

" sets {{{
set wildignore=*.o,*.a,__pycache__,*.pyc,*pycache*,**/coverage/*,**/node_modules/*,**/.git/*,
set guicursor=
set termguicolors
set cursorline
set hlsearch
set number
set relativenumber
set scrolloff=8
set signcolumn=yes
set colorcolumn=80
set noshowmode

set expandtab
set softtabstop=-1 " when sts is negative, value of shiftwidth is used
set shiftwidth=4
set smartindent
set nowrap

set splitright
"}}}

" vim: fdm=marker ts=2 sw=2 fdl=0 et:
